import{_ as s,c as n,o as a,a as e}from"./app.5fc241ff.js";const D=JSON.parse('{"title":"Build the environment","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install TypeScript","slug":"install-typescript","link":"#install-typescript","children":[]},{"level":2,"title":"Init & config tsconfig.json","slug":"init-config-tsconfig-json","link":"#init-config-tsconfig-json","children":[]},{"level":2,"title":"Install dependencies & ts-multi-tenancy","slug":"install-dependencies-ts-multi-tenancy","link":"#install-dependencies-ts-multi-tenancy","children":[{"level":3,"title":"Config ts-multi-tenancy configs","slug":"config-ts-multi-tenancy-configs","link":"#config-ts-multi-tenancy-configs","children":[]}]}],"relativePath":"guide/usage/0-build-the-environment.md"}'),l={name:"guide/usage/0-build-the-environment.md"},t=e(`<h1 id="build-the-environment" tabindex="-1">Build the environment <a class="header-anchor" href="#build-the-environment" aria-hidden="true">#</a></h1><h2 id="install-typescript" tabindex="-1">Install TypeScript <a class="header-anchor" href="#install-typescript" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span></span>
<span class="line"></span></code></pre></div><h2 id="init-config-tsconfig-json" tabindex="-1">Init &amp; config tsconfig.json <a class="header-anchor" href="#init-config-tsconfig-json" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tsc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span></code></pre></div><p>tsconfig.json</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">experimentalDecorators</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">emitDecoratorMetadata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="install-dependencies-ts-multi-tenancy" tabindex="-1">Install dependencies &amp; ts-multi-tenancy <a class="header-anchor" href="#install-dependencies-ts-multi-tenancy" aria-hidden="true">#</a></h2><p>Install typeorm and require driver</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># At here, we use Posrgres, so install pg</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typeorm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ts-multi-tenancy</span></span>
<span class="line"></span></code></pre></div><p>For running local migration generating yarn command.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ts-node</span></span>
<span class="line"></span></code></pre></div><h3 id="config-ts-multi-tenancy-configs" tabindex="-1">Config ts-multi-tenancy configs <a class="header-anchor" href="#config-ts-multi-tenancy-configs" aria-hidden="true">#</a></h3><p>Create a environment variable files with prefix <code>.env</code>.<br> Fof example: <code>.env.dev</code>.</p><div class="language-.env"><button title="Copy Code" class="copy"></button><span class="lang">.env</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">## DB_AUTH to PostgreSQL, if docker use, need to be sure.</span></span>
<span class="line"><span style="color:#A6ACCD;">DB_URL=postgresql://user:1234@127.0.0.1/dev</span></span>
<span class="line"><span style="color:#A6ACCD;">PLAN_NAME=standard</span></span>
<span class="line"><span style="color:#A6ACCD;">## true or false when everytime up database</span></span>
<span class="line"><span style="color:#A6ACCD;">DB_DROP_SCHEMA=false</span></span>
<span class="line"><span style="color:#A6ACCD;">DB_MIGRATIONS_RUN=false</span></span>
<span class="line"><span style="color:#A6ACCD;">## boolean | &quot;all&quot; | (&quot;query&quot; | &quot;schema&quot; | &quot;error&quot; | &quot;warn&quot; | &quot;info&quot; | &quot;log&quot; | &quot;migration&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">DB_LOGGING=false</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,15),o=[t];function p(c,i,r,d,y,C){return a(),n("div",null,o)}const A=s(l,[["render",p]]);export{D as __pageData,A as default};
